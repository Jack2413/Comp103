#BlueJ class context
comment0.params=boardSize
comment0.target=Board16(int)
comment1.params=
comment1.target=boolean\ hasReachedTarget()
comment1.text=\ Return\ whether\ (at\ least)\ the\ magic\ target\ number\ has\ been\ achieved\ \ \n\ \ [CORE]\n
comment10.params=col
comment10.target=void\ drawTile(int)
comment11.params=value
comment11.target=java.awt.Color\ getColor(int)
comment12.params=
comment12.target=void\ displayScore()
comment2.params=
comment2.target=boolean\ isGameOver()
comment2.text=\ Return\ whether\ the\ game\ is\ over\ (true)\ or\ not\ (false)\ \n\ \ If\ there\ is\ some\ space\ on\ the\ board\ left,\ the\ game\ is\ not\ over.\n\ \ If\ there\ is\ no\ space\ left,\ the\ game\ is\ still\ not\ over,\ if\ adjacent\ tiles\ hold\ the\ same\ value,\ \n\ \ as\ they\ could\ be\ compressed\ to\ fewer\ tiles\ by\ a\ player\ move.\n\ \ [CORE]\n
comment3.params=
comment3.target=int\ numEmptyTiles()
comment3.text=\ Return\ the\ number\ of\ empty\ tiles\ \n\ \ An\ empty\ tile\ is\ one\ which\ holds\ the\ value\ 0\n\ \ [CORE]\n
comment4.params=
comment4.target=void\ insertRandomTile()
comment4.text=\ Insert\ a\ random\ number\ (either\ 2\ or\ 4)\ at\ a\ randon\ empty\ tile.\n\ \ Note\ that\ 7\ out\ of\ 10\ times\ the\ number\ should\ be\ 2.\n\ \ An\ empty\ tile\ is\ one\ which\ holds\ the\ value\ 0.\n\ \ [CORE]\n
comment5.params=
comment5.target=void\ left()
comment5.text=\ Move\ the\ tiles\ left.\ \n\ \ \ \ Each\ time\ two\ tiles\ with\ the\ same\ number\ touch,\ the\ numbers\ are\ added\ and\ the\ two\ tiles\ merge\ on\ \n\ \ \ \ the\ left\ side.\ An\ empty\ tile\ is\ then\ added\ on\ the\ right\ hand\ side\ of\ the\ board.\n\n\ \ \ \ Examples\:\ \n\ \ \ \ 2\ 2\ 4\ 2\ will\ give\ 4\ 4\ 2\ 0\ (the\ first\ 2s\ merge\ into\ a\ 4.\ Then\ the\ remaining\n\ \ \ \ 4\ and\ 2\ follow,\ and\ the\ board\ is\ completed\ on\ the\ right\ with\ a\ 0)\n\n\ \ \ \ 4\ 4\ 2\ 2\ will\ give\ 8\ 4\ 0\ 0\ (4\ and\ 4\ merge\ into\ a\ 8,\ 2\ and\ 2\ merge\ into\ a\ 4,\ \n\ \ \ \ completing\ with\ zeros\ on\ the\ right)\n\n\ \ \ \ 4\ 4\ 4\ 4\ will\ give\ 8\ 8\ 0\ 0\ (First\ two\ 4s\ merge\ together,\ the\ last\ two\ 4s\ merge\ together)\n\n\ \ \ \ 1.\ Shift\ all\ non-empty\ tiles\ to\ the\ left\ as\ far\ as\ possible,\ making\ sure\ that\ all\ empty\ tiles\ are\ on\ the\ right.\n\ \ \ \ 2.\ From\ left\ to\ right,\ merge\ any\ two\ tiles\ with\ the\ same\ number\ by\ adding\ them,\ discarding\n\ \ \ \ the\ second\ one,\ and\ adding\ an\ empty\ tile\ on\ the\ right\ of\ the\ board.\n\ \ \ \ [COMPLETION]\n
comment6.params=
comment6.target=void\ right()
comment6.text=\ Move\ the\ tiles\ right.\ \n\ Each\ time\ 2\ tiles\ with\ the\ same\ number\ touch,\ the\ numbers\ are\ added\ and\ the\ two\ tiles\ merge\ on\ \n\ the\ right\ side.\ An\ empty\ tile\ is\ then\ added\ on\ the\ left\ hand\ side\ of\ the\ board.\n\n\ Examples\:\ \ \n\ \ \ 2\ 2\ 4\ 2\ will\ give\ 0\ 4\ 4\ 2\ (2\ and\ 4\ remain\ unchanged,\ then\ the\ last\ leftmost\ 2s\ merge\ \n\ \ \ \ \ into\ a\ 4,\ completing\ with\ a\ zero\ on\ the\ left.)\n\ \ \ \ \ \n\ \ \ 4\ 4\ 2\ 2\ will\ give\ 0\ 0\ 8\ 4\ (2\ and\ 2\ merge\ into\ a\ 4,\ 4\ and\ 4\ merge\ into\ a\ 8)\n\ \ \ 4\ 4\ 4\ 4\ will\ give\ 0\ 0\ 8\ 8\ (First\ two\ 4s\ merge\ together,\ the\ last\ two\ 4s\ merge\ together)\n\ \ \ \n\ \ \ 1.\ Shift\ all\ non-empty\ tiles\ to\ the\ right,\ making\ sure\ that\ all\ the\ empty\ tiles\ are\ on\ the\ left.\n\ \ \ 2.\ From\ right\ to\ left,\ merge\ any\ two\ tiles\ with\ the\ same\ number\ by\ adding\ them,\ discarding\ \n\ \ \ \ \ \ the\ second\ one,\ and\ adding\ an\ empty\ tile\ on\ the\ left\ of\ the\ board.\n\ \ \ \ [COMPLETION]\n
comment7.params=
comment7.target=java.lang.String\ toString()
comment8.params=txt
comment8.target=void\ displayMessage(java.lang.String)
comment9.params=
comment9.target=void\ redraw()
numComments=13
