#BlueJ class context
comment0.params=
comment0.target=Sokoban()
comment0.text=\ \n\ \ Constructs\ a\ new\ Sokoban\ object\n\ \ and\ set\ up\ the\ GUI.\n
comment1.params=
comment1.target=void\ Undo()
comment10.params=
comment10.target=void\ draw()
comment10.text=Draw\ the\ grid\ of\ squares\ on\ the\ screen,\ and\ the\ Worker
comment11.params=
comment11.target=void\ drawWorker()
comment12.params=pos
comment12.target=void\ drawSquare(Coord)
comment13.params=row\ col
comment13.target=void\ drawSquare(int,\ int)
comment14.params=
comment14.target=boolean\ isSolved()
comment14.text=\ \n\ \ @returns\ true,\ if\ the\ warehouse\ is\ solved,\ i.e.,\ \ \n\ \ all\ the\ shelves\ have\ boxes\ on\ them\ \n
comment15.params=direction
comment15.target=java.lang.String\ oppositeDirection(java.lang.String)
comment15.text=\ \n\ @return\ the\ direction\ that\ is\ opposite\ of\ the\ parameter\ \n
comment16.params=
comment16.target=void\ initialiseMappings()
comment17.params=args
comment17.target=void\ main(java.lang.String[])
comment2.params=
comment2.target=void\ Redo()
comment3.params=mouseAction\ x\ y
comment3.target=void\ doMouse(java.lang.String,\ double,\ double)
comment4.params=key
comment4.target=void\ doKey(java.lang.String)
comment4.text=Responds\ to\ key\ actions
comment5.params=action
comment5.target=void\ doAction(java.lang.String)
comment5.text=\ \n\ \ Moves\ the\ worker\ in\ the\ specified\ direction,\ if\ possible.\n\ \ If\ there\ is\ box\ in\ front\ of\ the\ Worker\ and\ a\ space\ in\ front\ of\ the\ box,\n\ \ then\ push\ the\ box.\n\ \ Otherwise,\ if\ there\ is\ anything\ in\ front\ of\ the\ Worker,\ do\ nothing.\n\ @param\ action\ the\ action\ to\ perform\ \n
comment6.params=direction
comment6.target=void\ move(java.lang.String)
comment6.text=\ Moves\ the\ worker\ into\ the\ new\ position\ (guaranteed\ to\ be\ empty)\ \n\ @param\ direction\ the\ direction\ the\ worker\ is\ heading\n
comment7.params=direction
comment7.target=void\ push(java.lang.String)
comment7.text=\ Push\:\ Moves\ the\ Worker,\ pushing\ the\ box\ one\ step\ \n\ \ @param\ direction\ the\ direction\ the\ worker\ is\ heading\n
comment8.params=direction
comment8.target=void\ pull(java.lang.String)
comment8.text=\ Pull\:\ (useful\ for\ undoing\ a\ push\ in\ the\ opposite\ direction)\n\ \ move\ the\ Worker\ in\ direction\ from\ direction,\n\ \ pulling\ the\ box\ into\ the\ Worker's\ old\ position\n
comment9.params=level
comment9.target=void\ load(int)
comment9.text=Load\ a\ grid\ of\ squares\ (and\ Worker\ position)\ from\ a\ file
numComments=18
